parameters:
  name: ''
  vmImage: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: '${{ parameters.name }} build and test'
    pool:
      vmImage: ${{ parameters.vmImage }}
    strategy:
      matrix:
        debug-build:
          BUILD_CONFIG: Debug
        release-build:
          BUILD_CONFIG: Release
    steps:
      - task: UseDotNet@2
        displayName: 'Use dotnet sdk 3.x'
        inputs:
          version: 3.x
          includePreviewVersions: true
      - bash: |
          chmod u+x ./build.sh
          ./build.sh build $BUILD_CONFIG
        displayName: build

      - bash: ./build.sh test $BUILD_CONFIG
        displayName: test

      - bash: ./build.sh pack
        displayName: pack
        condition: and( succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ), eq( variables['BUILD_CONFIG'], 'Release' ) )

      - task: PublishTestResults@2
        inputs:
          testRunner: VSTest
          testResultsFiles: '**/*.trx'

      - task: PublishBuildArtifacts@1
        condition: and( succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ), eq( variables['BUILD_CONFIG'], 'Release' ), ne( variables['Build.Reason'], 'PullRequest' ) )
        inputs:
          pathtoPublish: 'NuGet-Packed'
          artifactName: 'NuGet-Packed'
